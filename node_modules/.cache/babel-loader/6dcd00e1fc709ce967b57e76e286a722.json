{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/src/FormComponent.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n//\n// Author:       Brian Fromme\n// Copyright:    Copyright 2020, Gnu Public License - Version 2.0\n// Credits:      Brian Fromme, Bryan Gartner, Darren Soothill\n// Maintainer:   Brian Fromme\n// Status:       Prototype\n// Description:  Sonar form component - leveraged from grommet-sandbox\n//\nimport React from \"react\";\nimport ReactDOM from 'react-dom'; // grommet\n\nimport { Box, Button, Form, FormField, Grid, RangeInput, Select, Text, TextInput } from 'grommet';\nimport { FormAdd } from 'grommet-icons'; //\n// The form UI\n//\n// Simple True/False selector\n\nfunction TrueFalse() {\n  _s();\n\n  const [value, setValue] = React.useState('true');\n  return /*#__PURE__*/_jsxDEV(Select, {\n    options: ['true', 'false'],\n    value: value,\n    onChange: ({\n      option\n    }) => setValue(option)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n} // UI data\n\n\n_s(TrueFalse, \"808Na+dWzqdUN3SQgqj2Twyt8EI=\");\n\n_c = TrueFalse;\nconst USECASE_ARCHIVE = 'Archive';\nconst USECASE_MIXED = 'Mixed'; // Simple UseCase selector\n\nfunction UseCase(props) {\n  _s2();\n\n  const [value, setValue] = React.useState({\n    USECASE_ARCHIVE\n  });\n  return /*#__PURE__*/_jsxDEV(Select, {\n    options: [{\n      USECASE_ARCHIVE\n    }, {\n      USECASE_MIXED\n    }],\n    value: USECASE_ARCHIVE,\n    onChange: ({\n      option\n    }) => setValue(option),\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(UseCase, \"wS9XT5pcG1IG4wBKhP2eH+LQtUA=\");\n\n_c2 = UseCase;\n\nfunction displayOutputMessage(msg, err) {\n  // This is the Text area where output messages go\n  //var obj = document.getElementById(ID_MESSAGES);\n  var outputMess;\n\n  if (err) {\n    // preceed with: Error:\n    outputMess = 'Error: ' + msg;\n  } else {\n    // preceed with: Warning:\n    outputMess = 'Warning: ' + msg;\n  } // Update the OutputMessage area\n\n\n  return /*#__PURE__*/_jsxDEV(OutputMessage, {\n    desc: outputMess,\n    name: ID_OUTPUT\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 14\n  }, this);\n} // NOTE: This hack manages placement of Text ouptut.  Change for various fonts, etc.\n\n\nconst OUTPUT_MARGINS = {\n  \"vertical\": \"0px\",\n  \"horizontal\": \"10px\",\n  \"top\": \"0px\",\n  \"bottom\": \"0px\",\n  \"left\": \"10px\",\n  \"right\": \"0px\"\n};\nconst OUTPUTAREA_MARGINS = {\n  \"vertical\": \"0px\",\n  \"horizontal\": \"0px\",\n  \"top\": \"0px\",\n  \"bottom\": \"0px\",\n  \"left\": \"0px\",\n  \"right\": \"10px\"\n};\n\nfunction OutputMessage(props) {\n  // This is the Text area where output messages go\n  return /*#__PURE__*/_jsxDEV(Text, {\n    color: \"status-critical\",\n    margin: OUTPUT_MARGINS,\n    children: props.desc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n} // the one and only output text area\n\n\n_c3 = OutputMessage;\nconst DEFAULT_OUTPUT_MESSAGE = \"nothing to discuss...\";\nconst ID_OUTPUT = \"output\"; // OutputMessageArea - note there is only one of these\n\nclass OutputMessageArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nrDescription: props.desc,\n      nrName: props.name\n    };\n    return this;\n  }\n\n  updateOutputMessage(msg) {\n    var nam = this.state.nrName;\n\n    if (!nam) {\n      // raise an issue\n      alert('updateOutputMessage: no state name');\n    }\n\n    return /*#__PURE__*/_jsxDEV(OutputMessage, {\n      desc: msg,\n      name: this.state.nrName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this);\n  }\n\n  updateOutputMessageArea(msg) {\n    var newmsg = msg ? msg : DEFAULT_OUTPUT_MESSAGE;\n    var desc = this.state.nrDescription;\n\n    if (!desc) {\n      // raise an issue\n      alert('updateOutputMessage: no state description');\n    }\n\n    return /*#__PURE__*/_jsxDEV(Box, {\n      direction: \"column\",\n      pad: \"small\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Text, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        direction: \"row\",\n        border: {\n          color: 'brand',\n          size: 'small'\n        },\n        background: \"light-3\",\n        pad: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          weight: \"bold\",\n          truncate: true,\n          margin: OUTPUTAREA_MARGINS,\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), this.updateOutputMessage(newmsg)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this);\n  }\n\n  outputErrorOrWarning(message, err) {\n    // Display an error or warning message\n    alert('outputErrorOrWarning: ' + message);\n    var outputMess;\n\n    if (err) {\n      // preceed with: Error:\n      outputMess = 'Error: ' + message;\n    } else {\n      // preceed with: Warning:\n      outputMess = 'Warning: ' + message;\n    } // Update just the Text area\n\n\n    return this.updateOutputMessage(outputMess);\n  }\n\n  render() {\n    return this.updateOutputMessageArea('');\n  }\n\n} // end of class OutputMessage\n// NOTE: Also need to change the value of the slide, when the user types here\n\n\nclass NumericValue extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '#'\n    }; // const [value, setValue] = React.useState('');\n\n    this.nrDescription = props.desc;\n    this.nrProperties = props;\n    this.onChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    alert('NumericValue changed: ' + this.state.value);\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(TextInput, {\n      value: this.state,\n      icon: FormAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) // onChange={event => setValue(event.target.value)}\n    ;\n  }\n\n} // NOTE: This hack manages placement of \"desc\" property passed to InputFormField.  Change for various fonts, etc.\n// {\"vertical\":\"20px\", \"horizontal\":\"0px\", \"top\":\"7px\", \"bottom\":\"0px\", \"left\":\"0px\", \"right\":\"10px\"}\n//\n\n\nclass NumericRange extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.nrDescription = props.desc;\n    this.nrProperties = props;\n    this.onChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    alert('NumericRange changed: ' + this.state.value);\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    // NOTE: Need to set an initial value for both RangeInput and NumericValue\n    // Perhaps that means they should be a single component\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      areas: [{\n        name: 'labl',\n        start: [0, 0],\n        end: [0, 0]\n      }, {\n        name: 'slid',\n        start: [1, 0],\n        end: [1, 0]\n      }, {\n        name: 'numb',\n        start: [2, 0],\n        end: [2, 0]\n      }],\n      columns: ['280px', 'medium', '60px'],\n      rows: ['50px'],\n      gap: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        gridArea: \"labl\",\n        background: \"brand\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          margin: {\n            \"vertical\": \"10px\",\n            \"horizontal\": \"0px\",\n            \"top\": \"4px\",\n            \"bottom\": \"6px\",\n            \"left\": \"5px\",\n            \"right\": \"10px\"\n          },\n          children: this.nrDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        gridArea: \"slid\",\n        background: \"none\",\n        children: /*#__PURE__*/_jsxDEV(RangeInput, { ...this.nrProperties\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        gridArea: \"numb\",\n        background: \"none\",\n        children: /*#__PURE__*/_jsxDEV(NumericValue, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n\n} // NOTE: This hack manages placement of \"desc\" property passed to InputFormField.  Change for various fonts, etc.\n\n\nconst TEXT_MARGINS = {\n  \"vertical\": \"20px\",\n  \"horizontal\": \"0px\",\n  \"top\": \"7px\",\n  \"bottom\": \"0px\",\n  \"left\": \"0px\",\n  \"right\": \"10px\"\n}; // Specific FormField definition\n// NOTE:  Make consistent with:  function(props) or class\n//\n// The component to insert in the FormField. Grommet will add update the form values when this field changes.\n// Any additional properties (such as initial value) you pass to FormField will be forwarded to this component.\n// The component may be custom as long it supports the properties of name, value, onChange (event => {}),\n// while event has either event.value or event.target.value.\n\nclass InputFormField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.desc = this.props.desc;\n    this.name = this.props.name;\n  }\n\n  validate() {// TBD\n    // function\"\n    // {\n    // regexp:\n    // \"new RegExp(...),\"\n    // message:\n    // \"string\"\n    // \"node,\"\n    // status:\n    // \"error\"\n    // \"info\"\n    // }\n  }\n\n  render() {\n    // NOTE: don't use the Label feature of the FormField until we can figure out how to position it correctly\n    return /*#__PURE__*/_jsxDEV(Box, {\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        margin: TEXT_MARGINS,\n        children: [\" \", this.props.desc, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        name: this.name,\n        htmlFor: this.name,\n        direction: \"row-responsive\",\n        ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }, this);\n  }\n\n} // UI object IDs\n\n\nconst ID_COLO = \"colo\";\nconst ID_USECASE = \"usecase\";\nconst ID_CAPREQ = \"capreq\";\nconst ID_METACAP = \"metacap\";\nconst ID_DRIVECAP = \"drivecap\";\nconst ID_DRIVESPER = \"drivesper\";\nconst ID_SLOTSPER = \"slotsper\";\nconst ID_NVMEPER = \"nvmeper\";\nconst ID_DRIVETYPES = \"drivetypes\";\nconst ID_MAXFILLCAP = \"maxfillcap\";\nconst ID_NMVERATIO = \"nvmeratio\";\nconst ID_PROTTYPE = \"prottype\";\nconst ID_ECDATA = \"ecdata\";\nconst ID_ECPARITY = \"ecparity\";\nconst ID_MESSAGES = \"outputarea\";\nconst CLASS_MESSAGES = \"outputMessageArea\"; // Labels\n\nconst LABEL_COLO = \"Co-Location (GW/MDS/MON): \";\nconst LABEL_USECASE = \"Use Case: \";\nconst LABEL_CAPREQ = \"Capacity Required (TB): \";\nconst LABEL_METACAP = \"Metadata Capacity (TB): \";\nconst LABEL_DRIVECAP = \"Drive Capacity (TB): \";\nconst LABEL_DRIVESPER = \"# of Drives / Chassis: \";\nconst LABEL_SLOTSPER = \"# of Populated Slots / Chassis: \";\nconst LABEL_NVMEPER = \"# of NVMe Slots / Chassis: \";\nconst LABEL_DRIVETYPES = \"Drive Types: \";\nconst LABEL_MAXFILLCAP = \"Maximum Fill Capacity %: \";\nconst LABEL_NMVERATIO = \"NVMe Ratio (1:n): \";\nconst LABEL_PROTTYPE = \"Protection Type: \";\nconst LABEL_ECDATA = \"Error Correction - Data: \";\nconst LABEL_ECPARITY = \"Error Correction - Parity: \";\nconst LABEL_MESSAGES = \"Messages: \";\n\nclass FormComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.cancelPressed = this.cancelPressed.bind(this);\n    this.updatePressed = this.updatePressed.bind(this);\n    this.state = {\n      outputComponent: null\n    };\n    return this;\n  }\n\n  // Find the root DOM node for this object, then find the OutputMessageArea\n  findMySelf() {\n    const node = ReactDOM.findDOMNode(this);\n  } // Handle a change in one of the form fields\n\n\n  handleValidation(ev) {\n    alert('handleValidation');\n  } // Handle a change in one of the form fields\n\n\n  handleChange(ev) {\n    // we stored the Output Component in our class\n    if (!this.state.outputComponent) {\n      alert(\"no outputComponent\");\n    } else if (this.state.outputComponent && this.state.outputComponent.updateOutputMessage) {// this.state.outputComponent.updateOutputMessage('form field element changed');\n    }\n  } // Cancel button callback\n\n\n  cancelPressed(ev) {\n    // we stored the Output Component in our class\n    if (!this.state.outputComponent) {\n      alert(\"no outputComponent\");\n    }\n\n    if (this.state.outputComponent && this.state.outputComponent.updateOutputMessage) {\n      alert(\"cancelPressed: outputComponent\");\n      this.state.outputComponent.updateOutputMessage('cancel button pressed');\n    }\n  } // Update button callback\n\n\n  updatePressed(ev) {\n    if (!this.state.outputComponent) {\n      alert(\"no outputComponent\");\n    } else {\n      alert('updatePressed');\n    }\n  } // Store the passed object - used for OutputMessageArea instance\n\n\n  storeOutputComponent(obj) {\n    if (!obj) {\n      alert(\"storeOutputComponent: no object passed\");\n    } else {\n      this.state.outputComponent = obj;\n\n      if (this.state.outputComponent == null) {\n        alert(\"storeOutputComponent: no outputComponent after assignment\");\n      }\n    }\n  } // This defines the form contents\n\n\n  render() {\n    const obj = /*#__PURE__*/_jsxDEV(OutputMessageArea, {\n      desc: LABEL_MESSAGES,\n      name: ID_MESSAGES\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }, this);\n\n    this.storeOutputComponent(obj);\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.updatePressed,\n      onReset: this.cancelPressed,\n      onChange: this.handleChange,\n      onValidate: this.handleValidation,\n      children: [/*#__PURE__*/_jsxDEV(InputFormField, {\n        desc: LABEL_COLO,\n        name: ID_COLO,\n        component: TrueFalse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputFormField, {\n        desc: LABEL_USECASE,\n        name: ID_USECASE,\n        component: UseCase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumericRange, {\n        desc: LABEL_CAPREQ,\n        name: ID_CAPREQ\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumericRange, {\n        desc: LABEL_METACAP,\n        name: ID_METACAP\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumericRange, {\n        desc: LABEL_DRIVECAP,\n        name: ID_DRIVECAP\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumericRange, {\n        desc: LABEL_DRIVESPER,\n        name: ID_DRIVESPER\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumericRange, {\n        desc: LABEL_SLOTSPER,\n        name: ID_SLOTSPER\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumericRange, {\n        desc: LABEL_NVMEPER,\n        name: ID_NVMEPER\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumericRange, {\n        desc: LABEL_DRIVETYPES,\n        name: ID_DRIVETYPES\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumericRange, {\n        desc: LABEL_MAXFILLCAP,\n        name: ID_MAXFILLCAP\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumericRange, {\n        desc: LABEL_NMVERATIO,\n        name: ID_NMVERATIO\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumericRange, {\n        desc: LABEL_PROTTYPE,\n        name: ID_PROTTYPE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumericRange, {\n        desc: LABEL_ECDATA,\n        name: ID_ECDATA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumericRange, {\n        desc: LABEL_ECPARITY,\n        name: ID_ECPARITY\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), this.state.outputComponent, /*#__PURE__*/_jsxDEV(Box, {\n        direction: \"row\",\n        justify: \"between\",\n        margin: {\n          top: \"medium\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"reset\",\n          label: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          label: \"Update\",\n          primary: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this);\n  }\n\n} // end class FormComponent\n\n\nexport default FormComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TrueFalse\");\n$RefreshReg$(_c2, \"UseCase\");\n$RefreshReg$(_c3, \"OutputMessage\");","map":{"version":3,"sources":["/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/src/FormComponent.js"],"names":["React","ReactDOM","Box","Button","Form","FormField","Grid","RangeInput","Select","Text","TextInput","FormAdd","TrueFalse","value","setValue","useState","option","USECASE_ARCHIVE","USECASE_MIXED","UseCase","props","displayOutputMessage","msg","err","outputMess","ID_OUTPUT","OUTPUT_MARGINS","OUTPUTAREA_MARGINS","OutputMessage","desc","DEFAULT_OUTPUT_MESSAGE","OutputMessageArea","Component","constructor","state","nrDescription","nrName","name","updateOutputMessage","nam","alert","updateOutputMessageArea","newmsg","color","size","outputErrorOrWarning","message","render","NumericValue","nrProperties","onChange","handleChange","bind","event","setState","target","NumericRange","start","end","TEXT_MARGINS","InputFormField","validate","ID_COLO","ID_USECASE","ID_CAPREQ","ID_METACAP","ID_DRIVECAP","ID_DRIVESPER","ID_SLOTSPER","ID_NVMEPER","ID_DRIVETYPES","ID_MAXFILLCAP","ID_NMVERATIO","ID_PROTTYPE","ID_ECDATA","ID_ECPARITY","ID_MESSAGES","CLASS_MESSAGES","LABEL_COLO","LABEL_USECASE","LABEL_CAPREQ","LABEL_METACAP","LABEL_DRIVECAP","LABEL_DRIVESPER","LABEL_SLOTSPER","LABEL_NVMEPER","LABEL_DRIVETYPES","LABEL_MAXFILLCAP","LABEL_NMVERATIO","LABEL_PROTTYPE","LABEL_ECDATA","LABEL_ECPARITY","LABEL_MESSAGES","FormComponent","cancelPressed","updatePressed","outputComponent","findMySelf","node","findDOMNode","handleValidation","ev","storeOutputComponent","obj","top"],"mappings":"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","sourcesContent":["//\n// Author:       Brian Fromme\n// Copyright:    Copyright 2020, Gnu Public License - Version 2.0\n// Credits:      Brian Fromme, Bryan Gartner, Darren Soothill\n// Maintainer:   Brian Fromme\n// Status:       Prototype\n// Description:  Sonar form component - leveraged from grommet-sandbox\n//\n\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\n\n// grommet\nimport {\n    Box,\n    Button,\n    Form,\n    FormField,\n    Grid,\n    RangeInput,\n    Select,\n    Text,\n    TextInput,\n} from 'grommet';\nimport { FormAdd } from 'grommet-icons';\n\n//\n// The form UI\n//\n\n// Simple True/False selector\nfunction TrueFalse() {\n    const [value, setValue] = React.useState('true');\n    return (\n      <Select\n          options={['true', 'false']}\n          value={value}\n          onChange={({ option }) => setValue(option)}\n        />\n    );\n}\n\n\n// UI data\nconst USECASE_ARCHIVE = 'Archive';\nconst USECASE_MIXED = 'Mixed';\n\n// Simple UseCase selector\nfunction UseCase(props) {\n    const [value, setValue] = React.useState({USECASE_ARCHIVE});\n    return (\n      <Select\n          options={[{USECASE_ARCHIVE}, {USECASE_MIXED}]}\n          value={USECASE_ARCHIVE}\n          onChange={({ option }) => setValue(option)}\n          {...props}\n        />\n    );\n}\n\nfunction displayOutputMessage(msg, err) {\n    // This is the Text area where output messages go\n    //var obj = document.getElementById(ID_MESSAGES);\n    var outputMess;\n    if (err) {\n        // preceed with: Error:\n        outputMess = 'Error: ' + msg;\n    }\n    else {\n        // preceed with: Warning:\n        outputMess = 'Warning: ' + msg;\n    }\n    // Update the OutputMessage area\n    return ( <OutputMessage desc={outputMess} name={ID_OUTPUT} /> );\n}\n\n// NOTE: This hack manages placement of Text ouptut.  Change for various fonts, etc.\nconst OUTPUT_MARGINS = {\"vertical\":\"0px\", \"horizontal\":\"10px\", \"top\":\"0px\", \"bottom\":\"0px\", \"left\":\"10px\", \"right\":\"0px\"};\nconst OUTPUTAREA_MARGINS = {\"vertical\":\"0px\", \"horizontal\":\"0px\", \"top\":\"0px\", \"bottom\":\"0px\", \"left\":\"0px\", \"right\":\"10px\"};\n\nfunction OutputMessage(props) {\n    // This is the Text area where output messages go\n    return (\n        <Text color=\"status-critical\" margin={OUTPUT_MARGINS} >\n           {props.desc}\n        </Text>\n    );\n}\n\n// the one and only output text area\nconst DEFAULT_OUTPUT_MESSAGE = \"nothing to discuss...\";\nconst ID_OUTPUT = \"output\";\n\n// OutputMessageArea - note there is only one of these\nclass OutputMessageArea extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          nrDescription: props.desc,\n          nrName: props.name,\n      }\n      return this;\n  }\n\n  updateOutputMessage(msg) {\n    var nam = this.state.nrName;\n    if (!nam) {\n        // raise an issue\n        alert('updateOutputMessage: no state name');\n    }\n    return (\n        <OutputMessage desc={msg} name={this.state.nrName} />\n    );\n  }\n\n  updateOutputMessageArea(msg) {\n    var newmsg = (msg ? msg : DEFAULT_OUTPUT_MESSAGE);\n    var desc = this.state.nrDescription;\n    if (!desc) {\n        // raise an issue\n        alert('updateOutputMessage: no state description');\n    }\n    return (\n        <Box direction=\"column\" pad=\"small\"> <Text> </Text>\n            <Box direction=\"row\" border={{ color: 'brand', size: 'small' }} background=\"light-3\" pad=\"small\">\n              <Text weight=\"bold\" truncate={true} margin={OUTPUTAREA_MARGINS} >\n                  {desc}\n              </Text>\n              {this.updateOutputMessage(newmsg)}\n            </Box>\n        </Box>\n    );\n  }\n\n  outputErrorOrWarning(message, err) {\n    // Display an error or warning message\n    alert('outputErrorOrWarning: ' + message);\n    var outputMess;\n    if (err) {\n        // preceed with: Error:\n        outputMess = 'Error: ' + message;\n    }\n    else {\n        // preceed with: Warning:\n        outputMess = 'Warning: ' + message;\n    }\n    // Update just the Text area\n    return this.updateOutputMessage(outputMess);\n  }\n\n  render() {\n    return (this.updateOutputMessageArea(''));\n  }\n}    // end of class OutputMessage\n\n\n// NOTE: Also need to change the value of the slide, when the user types here\nclass NumericValue extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {value: '#'};\n      // const [value, setValue] = React.useState('');\n      this.nrDescription = props.desc;\n      this.nrProperties = props;\n      this.onChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    alert('NumericValue changed: ' + this.state.value);\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    return (\n        <TextInput value={this.state} icon={FormAdd} />\n        // onChange={event => setValue(event.target.value)}\n    );\n  }\n}\n\n// NOTE: This hack manages placement of \"desc\" property passed to InputFormField.  Change for various fonts, etc.\n// {\"vertical\":\"20px\", \"horizontal\":\"0px\", \"top\":\"7px\", \"bottom\":\"0px\", \"left\":\"0px\", \"right\":\"10px\"}\n//\n\nclass NumericRange extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {value: 0};\n      this.nrDescription = props.desc;\n      this.nrProperties = props;\n      this.onChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    alert('NumericRange changed: ' + this.state.value);\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    // NOTE: Need to set an initial value for both RangeInput and NumericValue\n      // Perhaps that means they should be a single component\n    return (\n      <Grid\n          areas={[\n              { name: 'labl', start: [0, 0], end: [0, 0] },\n              { name: 'slid', start: [1, 0], end: [1, 0] },\n              { name: 'numb', start: [2, 0], end: [2, 0] },\n          ]}\n          columns={['280px', 'medium', '60px']}\n          rows={['50px']}\n          gap='small'\n        >\n        <Box gridArea='labl' background='brand'>\n          <Text margin={{\"vertical\":\"10px\", \"horizontal\":\"0px\", \"top\":\"4px\", \"bottom\":\"6px\", \"left\":\"5px\", \"right\":\"10px\"}}>\n              {this.nrDescription}\n          </Text>\n        </Box>\n        <Box gridArea='slid' background='none'>\n          <RangeInput {...this.nrProperties} />\n        </Box>\n        <Box gridArea='numb' background='none'>\n          <NumericValue  />\n        </Box>\n      </Grid>\n    );\n  }\n}\n\n\n// NOTE: This hack manages placement of \"desc\" property passed to InputFormField.  Change for various fonts, etc.\nconst TEXT_MARGINS = {\"vertical\":\"20px\", \"horizontal\":\"0px\", \"top\":\"7px\", \"bottom\":\"0px\", \"left\":\"0px\", \"right\":\"10px\"};\n\n// Specific FormField definition\n// NOTE:  Make consistent with:  function(props) or class\n//\n// The component to insert in the FormField. Grommet will add update the form values when this field changes.\n// Any additional properties (such as initial value) you pass to FormField will be forwarded to this component.\n// The component may be custom as long it supports the properties of name, value, onChange (event => {}),\n// while event has either event.value or event.target.value.\n\nclass InputFormField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.desc = this.props.desc;\n    this.name = this.props.name;\n  }\n\n  validate() {\n      // TBD\n      // function\"\n      // {\n      // regexp:\n      // \"new RegExp(...),\"\n      // message:\n      // \"string\"\n      // \"node,\"\n      // status:\n      // \"error\"\n      // \"info\"\n      // }\n  }\n\n  render() {\n    // NOTE: don't use the Label feature of the FormField until we can figure out how to position it correctly\n    return (\n          <Box direction=\"row\">\n            <Text margin={TEXT_MARGINS}> {this.props.desc} </Text>\n            <FormField name={this.name} htmlFor={this.name} direction='row-responsive' {...this.props} />\n          </Box>\n    );\n  }\n}\n\n// UI object IDs\nconst ID_COLO = \"colo\";\nconst ID_USECASE = \"usecase\";\nconst ID_CAPREQ = \"capreq\";\nconst ID_METACAP = \"metacap\";\nconst ID_DRIVECAP = \"drivecap\";\nconst ID_DRIVESPER = \"drivesper\";\nconst ID_SLOTSPER = \"slotsper\";\nconst ID_NVMEPER = \"nvmeper\";\nconst ID_DRIVETYPES = \"drivetypes\";\nconst ID_MAXFILLCAP = \"maxfillcap\";\nconst ID_NMVERATIO = \"nvmeratio\";\nconst ID_PROTTYPE = \"prottype\";\nconst ID_ECDATA = \"ecdata\";\nconst ID_ECPARITY = \"ecparity\";\nconst ID_MESSAGES = \"outputarea\";\nconst CLASS_MESSAGES = \"outputMessageArea\";\n\n// Labels\nconst LABEL_COLO = \"Co-Location (GW/MDS/MON): \";\nconst LABEL_USECASE = \"Use Case: \";\nconst LABEL_CAPREQ = \"Capacity Required (TB): \";\nconst LABEL_METACAP = \"Metadata Capacity (TB): \";\nconst LABEL_DRIVECAP = \"Drive Capacity (TB): \";\nconst LABEL_DRIVESPER = \"# of Drives / Chassis: \";\nconst LABEL_SLOTSPER = \"# of Populated Slots / Chassis: \";\nconst LABEL_NVMEPER = \"# of NVMe Slots / Chassis: \";\nconst LABEL_DRIVETYPES = \"Drive Types: \";\nconst LABEL_MAXFILLCAP = \"Maximum Fill Capacity %: \";\nconst LABEL_NMVERATIO = \"NVMe Ratio (1:n): \";\nconst LABEL_PROTTYPE = \"Protection Type: \";\nconst LABEL_ECDATA = \"Error Correction - Data: \";\nconst LABEL_ECPARITY = \"Error Correction - Parity: \";\nconst LABEL_MESSAGES = \"Messages: \";\n\n\nclass FormComponent extends React.Component {\n  constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.cancelPressed = this.cancelPressed.bind(this);\n      this.updatePressed = this.updatePressed.bind(this);\n      this.state = {\n          outputComponent: null\n      };\n      return this;\n  };\n\n  // Find the root DOM node for this object, then find the OutputMessageArea\n  findMySelf() {\n      const node = ReactDOM.findDOMNode(this);\n  }\n\n  // Handle a change in one of the form fields\n  handleValidation(ev) {\n      alert('handleValidation');\n  }\n\n  // Handle a change in one of the form fields\n  handleChange(ev) {\n      // we stored the Output Component in our class\n      if (! this.state.outputComponent) {\n          alert(\"no outputComponent\");\n      }\n      else if (this.state.outputComponent && this.state.outputComponent.updateOutputMessage) {\n          // this.state.outputComponent.updateOutputMessage('form field element changed');\n      }\n  }\n\n  // Cancel button callback\n  cancelPressed(ev) {\n      // we stored the Output Component in our class\n      if (! this.state.outputComponent) {\n          alert(\"no outputComponent\");\n      }\n      if (this.state.outputComponent && this.state.outputComponent.updateOutputMessage) {\n          alert(\"cancelPressed: outputComponent\");\n          this.state.outputComponent.updateOutputMessage('cancel button pressed');\n      }\n  }\n\n  // Update button callback\n  updatePressed(ev) {\n      if (! this.state.outputComponent) {\n          alert(\"no outputComponent\");\n      }\n      else {\n          alert('updatePressed');\n      }\n  }\n\n  // Store the passed object - used for OutputMessageArea instance\n  storeOutputComponent(obj) {\n      if (! obj) {\n          alert(\"storeOutputComponent: no object passed\");\n      }\n      else {\n          this.state.outputComponent = obj\n          if (this.state.outputComponent == null) {\n              alert(\"storeOutputComponent: no outputComponent after assignment\");\n          }\n      }\n  }\n\n\n  // This defines the form contents\n  render() {\n    const obj = <OutputMessageArea desc={LABEL_MESSAGES} name={ID_MESSAGES} />;\n    this.storeOutputComponent(obj);\n    return (\n      <Form onSubmit={this.updatePressed} onReset={this.cancelPressed} onChange={this.handleChange} onValidate={this.handleValidation}>\n        <InputFormField desc={LABEL_COLO} name={ID_COLO} component={TrueFalse} />\n        <InputFormField desc={LABEL_USECASE} name={ID_USECASE} component={UseCase} />\n\n        <NumericRange desc={LABEL_CAPREQ} name={ID_CAPREQ} />\n        <NumericRange desc={LABEL_METACAP} name={ID_METACAP} />\n        <NumericRange desc={LABEL_DRIVECAP} name={ID_DRIVECAP} />\n        <NumericRange desc={LABEL_DRIVESPER} name={ID_DRIVESPER} />\n        <NumericRange desc={LABEL_SLOTSPER} name={ID_SLOTSPER} />\n        <NumericRange desc={LABEL_NVMEPER} name={ID_NVMEPER} />\n        <NumericRange desc={LABEL_DRIVETYPES} name={ID_DRIVETYPES} />\n        <NumericRange desc={LABEL_MAXFILLCAP} name={ID_MAXFILLCAP} />\n        <NumericRange desc={LABEL_NMVERATIO} name={ID_NMVERATIO} />\n        <NumericRange desc={LABEL_PROTTYPE} name={ID_PROTTYPE} />\n        <NumericRange desc={LABEL_ECDATA} name={ID_ECDATA} />\n        <NumericRange desc={LABEL_ECPARITY} name={ID_ECPARITY} />\n\n        {this.state.outputComponent}\n\n        <Box direction=\"row\" justify=\"between\" margin={{ top: \"medium\" }}>\n          <Button type=\"reset\" label=\"Cancel\" />\n          <Button type=\"submit\" label=\"Update\" primary />\n        </Box>\n      </Form>\n    );\n  }\n}    // end class FormComponent\n\nexport default FormComponent;\n\n"]},"metadata":{},"sourceType":"module"}