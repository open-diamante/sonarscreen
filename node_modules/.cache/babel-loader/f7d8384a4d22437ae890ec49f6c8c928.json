{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/src/FormComponent.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n//\n// Author:       Brian Fromme\n// Copyright:    Copyright 2020, Gnu Public License - Version 2.0\n// Credits:      Brian Fromme, Bryan Gartner, Darren Soothill\n// Maintainer:   Brian Fromme\n// Status:       Prototype\n// Description:  Sonar form component - leveraged from grommet-sandbox\n//\nimport React, { useState } from \"react\";\nimport { FormClose } from 'grommet-icons';\nimport { Box, Button, CheckBox, Collapsible, Form, FormField, Grommet, Heading, Layer, RadioButton, RadioButtonGroup, RangeInput, ResponsiveContext, Select, TextArea } from 'grommet'; //\n// The form UI\n//\n// Simple True/False selector\n\nfunction TrueFalse() {\n  _s();\n\n  const [value, setValue] = React.useState('true');\n  return /*#__PURE__*/_jsxDEV(Select, {\n    options: ['true', 'false'],\n    value: value,\n    onChange: ({\n      option\n    }) => setValue(option)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n} // Simple UseCase selector\n\n\n_s(TrueFalse, \"808Na+dWzqdUN3SQgqj2Twyt8EI=\");\n\n_c = TrueFalse;\n\nfunction UseCase() {\n  _s2();\n\n  const [value, setValue] = React.useState('Archive');\n  return /*#__PURE__*/_jsxDEV(Select, {\n    options: ['Archive', 'Mixed'],\n    value: value,\n    onChange: ({\n      option\n    }) => setValue(option)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n} // Specific FormField definition\n\n\n_s2(UseCase, \"y4elvBNb18KF13bM45hhfgsEH4E=\");\n\n_c2 = UseCase;\n\nconst InputFormField = props => /*#__PURE__*/_jsxDEV(FormField, {\n  direction: \"row-responsive\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 5\n}, this); // align='start'\n// height='medium'\n// justify='between'\n// background='brand'\n// elevation='none'\n// pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n// Labels\n\n\n_c3 = InputFormField;\nconst LABEL_COLO = \"Co-Location of Gateway/MDS/MONs: \";\nconst LABEL_USECASE = \"Use case: \";\n\nfunction FormComponent(props) {\n  // This defines the form contents\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: ({\n      value\n    }) => console.log(\"Submit\", value),\n    children: [/*#__PURE__*/_jsxDEV(InputFormField, {\n      label: \"Name\",\n      name: \"name\",\n      validate: {\n        regexp: /^[a-z]/i\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormField, {\n      label: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormField, {\n      label: LABEL_COLO,\n      name: \"colo\",\n      component: TrueFalse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormField, {\n      label: LABEL_USECASE,\n      name: \"usecase\",\n      component: UseCase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      name: \"subscribe\",\n      component: CheckBox,\n      pad: true,\n      label: \"Subscribe?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      name: \"ampm\",\n      component: RadioButtonGroup,\n      pad: true,\n      options: [\"morning\", \"evening\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      label: \"Size\",\n      name: \"size\",\n      component: Select,\n      options: [\"small\", \"medium\", \"large\", \"xlarge\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      label: \"Comments\",\n      name: \"comments\",\n      component: TextArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      label: \"Age\",\n      name: \"age\",\n      component: RangeInput,\n      pad: true,\n      min: 15,\n      max: 75\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      direction: \"row\",\n      justify: \"between\",\n      margin: {\n        top: \"medium\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        label: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        label: \"Update\",\n        primary: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = FormComponent;\nexport default FormComponent;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TrueFalse\");\n$RefreshReg$(_c2, \"UseCase\");\n$RefreshReg$(_c3, \"InputFormField\");\n$RefreshReg$(_c4, \"FormComponent\");","map":{"version":3,"sources":["/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/src/FormComponent.js"],"names":["React","useState","FormClose","Box","Button","CheckBox","Collapsible","Form","FormField","Grommet","Heading","Layer","RadioButton","RadioButtonGroup","RangeInput","ResponsiveContext","Select","TextArea","TrueFalse","value","setValue","option","UseCase","InputFormField","props","LABEL_COLO","LABEL_USECASE","FormComponent","console","log","regexp","top"],"mappings":"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","sourcesContent":["//\n// Author:       Brian Fromme\n// Copyright:    Copyright 2020, Gnu Public License - Version 2.0\n// Credits:      Brian Fromme, Bryan Gartner, Darren Soothill\n// Maintainer:   Brian Fromme\n// Status:       Prototype\n// Description:  Sonar form component - leveraged from grommet-sandbox\n//\n\nimport React, { useState } from \"react\";\nimport { FormClose } from 'grommet-icons';\nimport {\n    Box,\n    Button,\n    CheckBox,\n    Collapsible,\n    Form,\n    FormField,\n    Grommet,\n    Heading,\n    Layer,\n    RadioButton,\n    RadioButtonGroup,\n    RangeInput,\n    ResponsiveContext,\n    Select,\n    TextArea,\n} from 'grommet';\n\n//\n// The form UI\n//\n\n// Simple True/False selector\nfunction TrueFalse() {\n    const [value, setValue] = React.useState('true');\n    return (\n      <Select\n          options={['true', 'false']}\n          value={value}\n          onChange={({ option }) => setValue(option)}\n        />\n    );\n}\n\n\n// Simple UseCase selector\nfunction UseCase() {\n    const [value, setValue] = React.useState('Archive');\n    return (\n      <Select\n          options={['Archive', 'Mixed']}\n          value={value}\n          onChange={({ option }) => setValue(option)}\n        />\n    );\n}\n\n\n// Specific FormField definition\nconst InputFormField = (props) => (\n    <FormField\n        direction='row-responsive'\n        {...props}\n    />\n);\n\n// align='start'\n// height='medium'\n// justify='between'\n// background='brand'\n// elevation='none'\n// pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n\n// Labels\nconst LABEL_COLO = \"Co-Location of Gateway/MDS/MONs: \";\nconst LABEL_USECASE = \"Use case: \";\n\nfunction FormComponent(props) {\n  // This defines the form contents\n  return (\n    <Form onSubmit={({ value }) => console.log(\"Submit\", value)}>\n      <InputFormField label=\"Name\" name=\"name\" validate={{ regexp: /^[a-z]/i }} />\n      <InputFormField label=\"Email\" name=\"email\" type=\"email\" required />\n\n      <InputFormField label={LABEL_COLO} name=\"colo\" component={TrueFalse} />\n      <InputFormField label={LABEL_USECASE} name=\"usecase\" component={UseCase} />\n\n        <FormField\n            name=\"subscribe\"\n            component={CheckBox}\n            pad\n            label=\"Subscribe?\"\n        />\n        <FormField\n            name=\"ampm\"\n            component={RadioButtonGroup}\n            pad\n            options={[\"morning\", \"evening\"]}\n        />\n        <FormField\n            label=\"Size\"\n            name=\"size\"\n            component={Select}\n            options={[\"small\", \"medium\", \"large\", \"xlarge\"]}\n        />\n        <FormField label=\"Comments\" name=\"comments\" component={TextArea} />\n        <FormField\n            label=\"Age\"\n            name=\"age\"\n            component={RangeInput}\n            pad\n            min={15}\n            max={75}\n        />\n        <Box direction=\"row\" justify=\"between\" margin={{ top: \"medium\" }}>\n            <Button label=\"Cancel\" />\n            <Button type=\"submit\" label=\"Update\" primary />\n        </Box>\n    </Form>\n  );\n}\n\nexport default FormComponent;\n\n"]},"metadata":{},"sourceType":"module"}