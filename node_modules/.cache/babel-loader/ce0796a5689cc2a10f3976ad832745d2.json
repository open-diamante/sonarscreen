{"ast":null,"code":"import _classCallCheck from\"/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _assertThisInitialized from\"/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/node_modules/@babel/runtime/helpers/esm/createSuper\";import _objectSpread from\"/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";//\n// Author:       Brian Fromme\n// Copyright:    Copyright 2020, Gnu Public License - Version 2.0\n// Credits:      Brian Fromme, Bryan Gartner, Darren Soothill\n// Maintainer:   Brian Fromme\n// Status:       Prototype\n// Description:  Sonar form component - leveraged from grommet-sandbox\n//\nimport React from\"react\";//import ReactDOM from 'react-dom';\n// grommet\nimport{Box,Button,Form,FormField,Grid,RangeInput,Select,Text,TextInput}from'grommet';import{FormAdd}from'grommet-icons';//\n// The form UI\n//\n// Simple True/False selector\nfunction TrueFalse(){var _React$useState=React.useState('true'),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];return/*#__PURE__*/_jsx(Select,{options:['true','false'],value:value,onChange:function onChange(_ref){var option=_ref.option;return setValue(option);}});}// UI data\nvar USECASE_ARCHIVE='Archive';var USECASE_MIXED='Mixed';// Simple UseCase selector\nfunction UseCase(props){var _React$useState3=React.useState({USECASE_ARCHIVE:USECASE_ARCHIVE}),_React$useState4=_slicedToArray(_React$useState3,2),value=_React$useState4[0],setValue=_React$useState4[1];return/*#__PURE__*/_jsx(Select,_objectSpread({options:[{USECASE_ARCHIVE:USECASE_ARCHIVE},{USECASE_MIXED:USECASE_MIXED}],value:USECASE_ARCHIVE,onChange:function onChange(_ref2){var option=_ref2.option;return setValue(option);}},props));}// NOTE: This hack manages placement of Text ouptut.  Change for various fonts, etc.\nvar OUTPUT_MARGINS={\"vertical\":\"0px\",\"horizontal\":\"10px\",\"top\":\"0px\",\"bottom\":\"0px\",\"left\":\"10px\",\"right\":\"0px\"};var OUTPUTAREA_MARGINS={\"vertical\":\"0px\",\"horizontal\":\"0px\",\"top\":\"0px\",\"bottom\":\"0px\",\"left\":\"0px\",\"right\":\"10px\"};// OutputMessageArea - note there is only one of these\n////class OutputMessageArea extends React.Component {\n////    constructor(props) {\n////        super(props);\n////        this.nrDescription = props.desc;\n////        this.nrName = props.name;\n////        return this;\n////    }\n////    updateOutputMessage(msg) {\n////        return (\n////            <OutputMessage desc={msg} name={this.nrName} />\n////        );\n////    }\n////}\nfunction OutputMessage(props){// This is the Text area where output messages go\nreturn/*#__PURE__*/_jsx(Text,{color:\"status-critical\",margin:OUTPUT_MARGINS,children:props.desc});}// the one and only output text area\nvar DEFAULT_OUTPUT_MESSAGE=\"nothing to discuss...\";// const ID_OUTPUT = \"output\";\n// OutputMessageArea - note there is only one of these\nvar OutputMessageArea=/*#__PURE__*/function(_React$Component){_inherits(OutputMessageArea,_React$Component);var _super=_createSuper(OutputMessageArea);function OutputMessageArea(props){var _this;_classCallCheck(this,OutputMessageArea);_this=_super.call(this,props);_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.state={nrDescription:props.desc,nrName:props.name};return _possibleConstructorReturn(_this,_assertThisInitialized(_this));}// Handle a change in the OutputMessageArea\n_createClass(OutputMessageArea,[{key:\"handleChange\",value:function handleChange(ev){alert(\"handleChange: OutputMessageArea\");}},{key:\"updateOutputMessage\",value:function updateOutputMessage(msg){var nam=this.state.nrName;if(!nam){// raise an issue\nalert('updateOutputMessage: no state name');}return/*#__PURE__*/_jsx(OutputMessage,{desc:msg,name:this.state.nrName});}},{key:\"updateOutputMessageArea\",value:function updateOutputMessageArea(msg){var newmsg=msg?msg:DEFAULT_OUTPUT_MESSAGE;var desc=this.state.nrDescription;if(!desc){// raise an issue\nalert('updateOutputMessage: no state description');}return/*#__PURE__*/_jsxs(Box,{direction:\"column\",pad:\"small\",children:[\" \",/*#__PURE__*/_jsx(Text,{children:\" \"}),/*#__PURE__*/_jsxs(Box,{direction:\"row\",border:{color:'brand',size:'small'},background:\"light-3\",pad:\"small\",children:[/*#__PURE__*/_jsx(Text,{weight:\"bold\",truncate:true,margin:OUTPUTAREA_MARGINS,children:desc}),this.updateOutputMessage(newmsg)]})]});}},{key:\"outputErrorOrWarning\",value:function outputErrorOrWarning(message,err){// Display an error or warning message\nalert('outputErrorOrWarning: '+message);var outputMess;if(err){// preceed with: Error:\noutputMess='Error: '+message;}else{// preceed with: Warning:\noutputMess='Warning: '+message;}// Update just the Text area\nreturn this.updateOutputMessage(outputMess);}},{key:\"render\",value:function render(){return this.updateOutputMessageArea('');}}]);return OutputMessageArea;}(React.Component);// end of class OutputMessage\n// NOTE: Also need to change the value of the slide, when the user types here\nvar NumericValue=/*#__PURE__*/function(_React$Component2){_inherits(NumericValue,_React$Component2);var _super2=_createSuper(NumericValue);function NumericValue(props){var _this2;_classCallCheck(this,NumericValue);_this2=_super2.call(this,props);_this2.state={value:'#'};// const [value, setValue] = React.useState('');\n_this2.nrDescription=props.desc;_this2.nrProperties=props;_this2.onChange=_this2.handleChange.bind(_assertThisInitialized(_this2));return _this2;}_createClass(NumericValue,[{key:\"handleChange\",value:function handleChange(event){alert('NumericValue changed: '+this.state.value);this.setState({value:event.target.value});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(TextInput,{value:this.state,icon:FormAdd})// onChange={event => setValue(event.target.value)}\n;}}]);return NumericValue;}(React.Component);// NOTE: This hack manages placement of \"desc\" property passed to InputFormField.  Change for various fonts, etc.\n// {\"vertical\":\"20px\", \"horizontal\":\"0px\", \"top\":\"7px\", \"bottom\":\"0px\", \"left\":\"0px\", \"right\":\"10px\"}\n//\nvar NumericRange=/*#__PURE__*/function(_React$Component3){_inherits(NumericRange,_React$Component3);var _super3=_createSuper(NumericRange);function NumericRange(props){var _this3;_classCallCheck(this,NumericRange);_this3=_super3.call(this,props);_this3.state={value:0};_this3.nrDescription=props.desc;_this3.nrProperties=props;_this3.onChange=_this3.handleChange.bind(_assertThisInitialized(_this3));return _this3;}_createClass(NumericRange,[{key:\"handleChange\",value:function handleChange(event){alert('NumericRange changed: '+this.state.value);this.setState({value:event.target.value});}},{key:\"render\",value:function render(){// NOTE: Need to set an initial value for both RangeInput and NumericValue\n// Perhaps that means they should be a single component\nreturn/*#__PURE__*/_jsxs(Grid,{areas:[{name:'labl',start:[0,0],end:[0,0]},{name:'slid',start:[1,0],end:[1,0]},{name:'numb',start:[2,0],end:[2,0]}],columns:['280px','medium','60px'],rows:['50px'],gap:\"small\",children:[/*#__PURE__*/_jsx(Box,{gridArea:\"labl\",background:\"brand\",children:/*#__PURE__*/_jsx(Text,{margin:{\"vertical\":\"10px\",\"horizontal\":\"0px\",\"top\":\"4px\",\"bottom\":\"6px\",\"left\":\"5px\",\"right\":\"10px\"},children:this.nrDescription})}),/*#__PURE__*/_jsx(Box,{gridArea:\"slid\",background:\"none\",children:/*#__PURE__*/_jsx(RangeInput,_objectSpread({},this.nrProperties))}),/*#__PURE__*/_jsx(Box,{gridArea:\"numb\",background:\"none\",children:/*#__PURE__*/_jsx(NumericValue,{})})]});}}]);return NumericRange;}(React.Component);// NOTE: This hack manages placement of \"desc\" property passed to InputFormField.  Change for various fonts, etc.\nvar TEXT_MARGINS={\"vertical\":\"20px\",\"horizontal\":\"0px\",\"top\":\"7px\",\"bottom\":\"0px\",\"left\":\"0px\",\"right\":\"10px\"};// Specific FormField definition\n// NOTE:  Make consistent with:  function(props) or class\n//\n// The component to insert in the FormField. Grommet will add update the form values when this field changes.\n// Any additional properties (such as initial value) you pass to FormField will be forwarded to this component.\n// The component may be custom as long it supports the properties of name, value, onChange (event => {}),\n// while event has either event.value or event.target.value.\nvar InputFormField=/*#__PURE__*/function(_React$Component4){_inherits(InputFormField,_React$Component4);var _super4=_createSuper(InputFormField);function InputFormField(props){var _this4;_classCallCheck(this,InputFormField);_this4=_super4.call(this,props);_this4.desc=_this4.props.desc;_this4.name=_this4.props.name;return _this4;}_createClass(InputFormField,[{key:\"validate\",value:function validate(){// TBD\n// function\"\n// {\n// regexp:\n// \"new RegExp(...),\"\n// message:\n// \"string\"\n// \"node,\"\n// status:\n// \"error\"\n// \"info\"\n// }\n}},{key:\"render\",value:function render(){// NOTE: don't use the Label feature of the FormField until we can figure out how to position it correctly\nreturn/*#__PURE__*/_jsxs(Box,{direction:\"row\",children:[/*#__PURE__*/_jsxs(Text,{margin:TEXT_MARGINS,children:[\" \",this.props.desc,\" \"]}),/*#__PURE__*/_jsx(FormField,_objectSpread({name:this.name,htmlFor:this.name,direction:\"row-responsive\"},this.props))]});}}]);return InputFormField;}(React.Component);// UI object IDs\nvar ID_COLO=\"colo\";var ID_USECASE=\"usecase\";var ID_CAPREQ=\"capreq\";var ID_METACAP=\"metacap\";var ID_DRIVECAP=\"drivecap\";var ID_DRIVESPER=\"drivesper\";var ID_SLOTSPER=\"slotsper\";var ID_NVMEPER=\"nvmeper\";var ID_DRIVETYPES=\"drivetypes\";var ID_MAXFILLCAP=\"maxfillcap\";var ID_NMVERATIO=\"nvmeratio\";var ID_PROTTYPE=\"prottype\";var ID_ECDATA=\"ecdata\";var ID_ECPARITY=\"ecparity\";var ID_MESSAGES=\"outputarea\";// const CLASS_MESSAGES = \"outputMessageArea\";\n// Labels\nvar LABEL_COLO=\"Co-Location (GW/MDS/MON): \";var LABEL_USECASE=\"Use Case: \";var LABEL_CAPREQ=\"Capacity Required (TB): \";var LABEL_METACAP=\"Metadata Capacity (TB): \";var LABEL_DRIVECAP=\"Drive Capacity (TB): \";var LABEL_DRIVESPER=\"# of Drives / Chassis: \";var LABEL_SLOTSPER=\"# of Populated Slots / Chassis: \";var LABEL_NVMEPER=\"# of NVMe Slots / Chassis: \";var LABEL_DRIVETYPES=\"Drive Types: \";var LABEL_MAXFILLCAP=\"Maximum Fill Capacity %: \";var LABEL_NMVERATIO=\"NVMe Ratio (1:n): \";var LABEL_PROTTYPE=\"Protection Type: \";var LABEL_ECDATA=\"Error Correction - Data: \";var LABEL_ECPARITY=\"Error Correction - Parity: \";var LABEL_MESSAGES=\"Messages: \";var FormComponent=/*#__PURE__*/function(_React$Component5){_inherits(FormComponent,_React$Component5);var _super5=_createSuper(FormComponent);function FormComponent(props){var _this5;_classCallCheck(this,FormComponent);_this5=_super5.call(this,props);_this5.handleChange=_this5.handleChange.bind(_assertThisInitialized(_this5));_this5.cancelPressed=_this5.cancelPressed.bind(_assertThisInitialized(_this5));_this5.updatePressed=_this5.updatePressed.bind(_assertThisInitialized(_this5));_this5.state={outputComponent:null};return _possibleConstructorReturn(_this5,_assertThisInitialized(_this5));}_createClass(FormComponent,[{key:\"handleValidation\",// Handle a change in one of the form fields\nvalue:function handleValidation(ev){alert('handleValidation');}// Handle a change in one of the form fields\n},{key:\"handleChange\",value:function handleChange(ev){// we stored the Output Component in our class\nif(!this.state.outputComponent){alert(\"no outputComponent\");}else if(this.state.outputComponent&&this.state.outputComponent.updateOutputMessage){// this.state.outputComponent.updateOutputMessage('form field element changed');\n}}// Cancel button callback\n},{key:\"cancelPressed\",value:function cancelPressed(ev){// we stored the Output Component in our class\nif(!this.state.outputComponent){alert(\"no outputComponent\");}if(this.state.outputComponent){alert(\"cancelPressed: outputComponent\");//this.state.outputComponent.updateOutputMessage('cancel button pressed');\n}}// Update button callback\n},{key:\"updatePressed\",value:function updatePressed(ev){if(!this.state.outputComponent){alert(\"no outputComponent\");}else{alert('updatePressed');}}// Store the passed object - used for OutputMessageArea instance\n},{key:\"storeOutputComponent\",value:function storeOutputComponent(obj){if(!obj){alert(\"storeOutputComponent: no object passed\");}else{this.state.outputComponent=obj;if(this.state.outputComponent==null){alert(\"storeOutputComponent: no outputComponent after assignment\");}}}// This defines the form contents\n// NOTE: Can we pass a DOM class ID to the grommet class?\n},{key:\"render\",value:function render(){var obj=/*#__PURE__*/_jsx(OutputMessageArea,{desc:LABEL_MESSAGES,name:ID_MESSAGES});this.storeOutputComponent(obj);return/*#__PURE__*/_jsxs(Form,{onSubmit:this.updatePressed,onReset:this.cancelPressed,onChange:this.handleChange,onValidate:this.handleValidation,children:[/*#__PURE__*/_jsx(InputFormField,{desc:LABEL_COLO,name:ID_COLO,component:TrueFalse}),/*#__PURE__*/_jsx(InputFormField,{desc:LABEL_USECASE,name:ID_USECASE,component:UseCase}),/*#__PURE__*/_jsx(NumericRange,{desc:LABEL_CAPREQ,name:ID_CAPREQ}),/*#__PURE__*/_jsx(NumericRange,{desc:LABEL_METACAP,name:ID_METACAP}),/*#__PURE__*/_jsx(NumericRange,{desc:LABEL_DRIVECAP,name:ID_DRIVECAP}),/*#__PURE__*/_jsx(NumericRange,{desc:LABEL_DRIVESPER,name:ID_DRIVESPER}),/*#__PURE__*/_jsx(NumericRange,{desc:LABEL_SLOTSPER,name:ID_SLOTSPER}),/*#__PURE__*/_jsx(NumericRange,{desc:LABEL_NVMEPER,name:ID_NVMEPER}),/*#__PURE__*/_jsx(NumericRange,{desc:LABEL_DRIVETYPES,name:ID_DRIVETYPES}),/*#__PURE__*/_jsx(NumericRange,{desc:LABEL_MAXFILLCAP,name:ID_MAXFILLCAP}),/*#__PURE__*/_jsx(NumericRange,{desc:LABEL_NMVERATIO,name:ID_NMVERATIO}),/*#__PURE__*/_jsx(NumericRange,{desc:LABEL_PROTTYPE,name:ID_PROTTYPE}),/*#__PURE__*/_jsx(NumericRange,{desc:LABEL_ECDATA,name:ID_ECDATA}),/*#__PURE__*/_jsx(NumericRange,{desc:LABEL_ECPARITY,name:ID_ECPARITY}),this.state.outputComponent,/*#__PURE__*/_jsxs(Box,{direction:\"row\",justify:\"between\",margin:{top:\"medium\"},children:[/*#__PURE__*/_jsx(Button,{type:\"reset\",label:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",label:\"Update\",primary:true})]})]});}}]);return FormComponent;}(React.Component);// end class FormComponent\nexport default FormComponent;","map":{"version":3,"sources":["/home/fromme/projects/SUSE/Sonar/npm-install-grommet/sonarscreen/src/FormComponent.js"],"names":["React","Box","Button","Form","FormField","Grid","RangeInput","Select","Text","TextInput","FormAdd","TrueFalse","useState","value","setValue","option","USECASE_ARCHIVE","USECASE_MIXED","UseCase","props","OUTPUT_MARGINS","OUTPUTAREA_MARGINS","OutputMessage","desc","DEFAULT_OUTPUT_MESSAGE","OutputMessageArea","handleChange","bind","state","nrDescription","nrName","name","ev","alert","msg","nam","newmsg","color","size","updateOutputMessage","message","err","outputMess","updateOutputMessageArea","Component","NumericValue","nrProperties","onChange","event","setState","target","NumericRange","start","end","TEXT_MARGINS","InputFormField","ID_COLO","ID_USECASE","ID_CAPREQ","ID_METACAP","ID_DRIVECAP","ID_DRIVESPER","ID_SLOTSPER","ID_NVMEPER","ID_DRIVETYPES","ID_MAXFILLCAP","ID_NMVERATIO","ID_PROTTYPE","ID_ECDATA","ID_ECPARITY","ID_MESSAGES","LABEL_COLO","LABEL_USECASE","LABEL_CAPREQ","LABEL_METACAP","LABEL_DRIVECAP","LABEL_DRIVESPER","LABEL_SLOTSPER","LABEL_NVMEPER","LABEL_DRIVETYPES","LABEL_MAXFILLCAP","LABEL_NMVERATIO","LABEL_PROTTYPE","LABEL_ECDATA","LABEL_ECPARITY","LABEL_MESSAGES","FormComponent","cancelPressed","updatePressed","outputComponent","obj","storeOutputComponent","handleValidation","top"],"mappings":"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","sourcesContent":["//\n// Author:       Brian Fromme\n// Copyright:    Copyright 2020, Gnu Public License - Version 2.0\n// Credits:      Brian Fromme, Bryan Gartner, Darren Soothill\n// Maintainer:   Brian Fromme\n// Status:       Prototype\n// Description:  Sonar form component - leveraged from grommet-sandbox\n//\n\nimport React from \"react\";\n//import ReactDOM from 'react-dom';\n\n// grommet\nimport {\n    Box,\n    Button,\n    Form,\n    FormField,\n    Grid,\n    RangeInput,\n    Select,\n    Text,\n    TextInput,\n} from 'grommet';\nimport { FormAdd } from 'grommet-icons';\n\n//\n// The form UI\n//\n\n// Simple True/False selector\nfunction TrueFalse() {\n    const [value, setValue] = React.useState('true');\n    return (\n      <Select\n          options={['true', 'false']}\n          value={value}\n          onChange={({ option }) => setValue(option)}\n        />\n    );\n}\n\n\n// UI data\nconst USECASE_ARCHIVE = 'Archive';\nconst USECASE_MIXED = 'Mixed';\n\n// Simple UseCase selector\nfunction UseCase(props) {\n    const [value, setValue] = React.useState({USECASE_ARCHIVE});\n    return (\n      <Select\n          options={[{USECASE_ARCHIVE}, {USECASE_MIXED}]}\n          value={USECASE_ARCHIVE}\n          onChange={({ option }) => setValue(option)}\n          {...props}\n        />\n    );\n}\n\n// NOTE: This hack manages placement of Text ouptut.  Change for various fonts, etc.\nconst OUTPUT_MARGINS = {\"vertical\":\"0px\", \"horizontal\":\"10px\", \"top\":\"0px\", \"bottom\":\"0px\", \"left\":\"10px\", \"right\":\"0px\"};\nconst OUTPUTAREA_MARGINS = {\"vertical\":\"0px\", \"horizontal\":\"0px\", \"top\":\"0px\", \"bottom\":\"0px\", \"left\":\"0px\", \"right\":\"10px\"};\n\n// OutputMessageArea - note there is only one of these\n////class OutputMessageArea extends React.Component {\n////    constructor(props) {\n////        super(props);\n////        this.nrDescription = props.desc;\n////        this.nrName = props.name;\n////        return this;\n////    }\n////    updateOutputMessage(msg) {\n////        return (\n////            <OutputMessage desc={msg} name={this.nrName} />\n////        );\n////    }\n////}\n\nfunction OutputMessage(props) {\n    // This is the Text area where output messages go\n    return (\n        <Text color=\"status-critical\" margin={OUTPUT_MARGINS} >\n           {props.desc}\n        </Text>\n    );\n}\n\n// the one and only output text area\nconst DEFAULT_OUTPUT_MESSAGE = \"nothing to discuss...\";\n// const ID_OUTPUT = \"output\";\n\n// OutputMessageArea - note there is only one of these\nclass OutputMessageArea extends React.Component {\n  constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.state = {\n          nrDescription: props.desc,\n          nrName: props.name,\n      }\n      return this;\n  }\n\n  // Handle a change in the OutputMessageArea\n  handleChange(ev) {\n      alert(\"handleChange: OutputMessageArea\");\n  }\n\n  updateOutputMessage(msg) {\n    var nam = this.state.nrName;\n    if (!nam) {\n        // raise an issue\n        alert('updateOutputMessage: no state name');\n    }\n    return (\n        <OutputMessage desc={msg} name={this.state.nrName} />\n    );\n  }\n\n  updateOutputMessageArea(msg) {\n    var newmsg = (msg ? msg : DEFAULT_OUTPUT_MESSAGE);\n    var desc = this.state.nrDescription;\n    if (!desc) {\n        // raise an issue\n        alert('updateOutputMessage: no state description');\n    }\n    return (\n        <Box direction=\"column\" pad=\"small\"> <Text> </Text>\n            <Box direction=\"row\" border={{ color: 'brand', size: 'small' }} background=\"light-3\" pad=\"small\">\n              <Text weight=\"bold\" truncate={true} margin={OUTPUTAREA_MARGINS} >\n                  {desc}\n              </Text>\n              {this.updateOutputMessage(newmsg)}\n            </Box>\n        </Box>\n    );\n  }\n\n  outputErrorOrWarning(message, err) {\n    // Display an error or warning message\n    alert('outputErrorOrWarning: ' + message);\n    var outputMess;\n    if (err) {\n        // preceed with: Error:\n        outputMess = 'Error: ' + message;\n    }\n    else {\n        // preceed with: Warning:\n        outputMess = 'Warning: ' + message;\n    }\n    // Update just the Text area\n    return this.updateOutputMessage(outputMess);\n  }\n\n  render() {\n    return (this.updateOutputMessageArea(''));\n  }\n}    // end of class OutputMessage\n\n\n// NOTE: Also need to change the value of the slide, when the user types here\nclass NumericValue extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {value: '#'};\n      // const [value, setValue] = React.useState('');\n      this.nrDescription = props.desc;\n      this.nrProperties = props;\n      this.onChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    alert('NumericValue changed: ' + this.state.value);\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    return (\n        <TextInput value={this.state} icon={FormAdd} />\n        // onChange={event => setValue(event.target.value)}\n    );\n  }\n}\n\n// NOTE: This hack manages placement of \"desc\" property passed to InputFormField.  Change for various fonts, etc.\n// {\"vertical\":\"20px\", \"horizontal\":\"0px\", \"top\":\"7px\", \"bottom\":\"0px\", \"left\":\"0px\", \"right\":\"10px\"}\n//\n\nclass NumericRange extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {value: 0};\n      this.nrDescription = props.desc;\n      this.nrProperties = props;\n      this.onChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    alert('NumericRange changed: ' + this.state.value);\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    // NOTE: Need to set an initial value for both RangeInput and NumericValue\n      // Perhaps that means they should be a single component\n    return (\n      <Grid\n          areas={[\n              { name: 'labl', start: [0, 0], end: [0, 0] },\n              { name: 'slid', start: [1, 0], end: [1, 0] },\n              { name: 'numb', start: [2, 0], end: [2, 0] },\n          ]}\n          columns={['280px', 'medium', '60px']}\n          rows={['50px']}\n          gap='small'\n        >\n        <Box gridArea='labl' background='brand'>\n          <Text margin={{\"vertical\":\"10px\", \"horizontal\":\"0px\", \"top\":\"4px\", \"bottom\":\"6px\", \"left\":\"5px\", \"right\":\"10px\"}}>\n              {this.nrDescription}\n          </Text>\n        </Box>\n        <Box gridArea='slid' background='none'>\n          <RangeInput {...this.nrProperties} />\n        </Box>\n        <Box gridArea='numb' background='none'>\n          <NumericValue  />\n        </Box>\n      </Grid>\n    );\n  }\n}\n\n\n// NOTE: This hack manages placement of \"desc\" property passed to InputFormField.  Change for various fonts, etc.\nconst TEXT_MARGINS = {\"vertical\":\"20px\", \"horizontal\":\"0px\", \"top\":\"7px\", \"bottom\":\"0px\", \"left\":\"0px\", \"right\":\"10px\"};\n\n// Specific FormField definition\n// NOTE:  Make consistent with:  function(props) or class\n//\n// The component to insert in the FormField. Grommet will add update the form values when this field changes.\n// Any additional properties (such as initial value) you pass to FormField will be forwarded to this component.\n// The component may be custom as long it supports the properties of name, value, onChange (event => {}),\n// while event has either event.value or event.target.value.\n\nclass InputFormField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.desc = this.props.desc;\n    this.name = this.props.name;\n  }\n\n  validate() {\n      // TBD\n      // function\"\n      // {\n      // regexp:\n      // \"new RegExp(...),\"\n      // message:\n      // \"string\"\n      // \"node,\"\n      // status:\n      // \"error\"\n      // \"info\"\n      // }\n  }\n\n  render() {\n    // NOTE: don't use the Label feature of the FormField until we can figure out how to position it correctly\n    return (\n          <Box direction=\"row\">\n            <Text margin={TEXT_MARGINS}> {this.props.desc} </Text>\n            <FormField name={this.name} htmlFor={this.name} direction='row-responsive' {...this.props} />\n          </Box>\n    );\n  }\n}\n\n// UI object IDs\nconst ID_COLO = \"colo\";\nconst ID_USECASE = \"usecase\";\nconst ID_CAPREQ = \"capreq\";\nconst ID_METACAP = \"metacap\";\nconst ID_DRIVECAP = \"drivecap\";\nconst ID_DRIVESPER = \"drivesper\";\nconst ID_SLOTSPER = \"slotsper\";\nconst ID_NVMEPER = \"nvmeper\";\nconst ID_DRIVETYPES = \"drivetypes\";\nconst ID_MAXFILLCAP = \"maxfillcap\";\nconst ID_NMVERATIO = \"nvmeratio\";\nconst ID_PROTTYPE = \"prottype\";\nconst ID_ECDATA = \"ecdata\";\nconst ID_ECPARITY = \"ecparity\";\nconst ID_MESSAGES = \"outputarea\";\n// const CLASS_MESSAGES = \"outputMessageArea\";\n\n// Labels\nconst LABEL_COLO = \"Co-Location (GW/MDS/MON): \";\nconst LABEL_USECASE = \"Use Case: \";\nconst LABEL_CAPREQ = \"Capacity Required (TB): \";\nconst LABEL_METACAP = \"Metadata Capacity (TB): \";\nconst LABEL_DRIVECAP = \"Drive Capacity (TB): \";\nconst LABEL_DRIVESPER = \"# of Drives / Chassis: \";\nconst LABEL_SLOTSPER = \"# of Populated Slots / Chassis: \";\nconst LABEL_NVMEPER = \"# of NVMe Slots / Chassis: \";\nconst LABEL_DRIVETYPES = \"Drive Types: \";\nconst LABEL_MAXFILLCAP = \"Maximum Fill Capacity %: \";\nconst LABEL_NMVERATIO = \"NVMe Ratio (1:n): \";\nconst LABEL_PROTTYPE = \"Protection Type: \";\nconst LABEL_ECDATA = \"Error Correction - Data: \";\nconst LABEL_ECPARITY = \"Error Correction - Parity: \";\nconst LABEL_MESSAGES = \"Messages: \";\n\n\nclass FormComponent extends React.Component {\n  constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.cancelPressed = this.cancelPressed.bind(this);\n      this.updatePressed = this.updatePressed.bind(this);\n      this.state = {\n          outputComponent: null\n      };\n      return this;\n  };\n\n  // Handle a change in one of the form fields\n  handleValidation(ev) {\n      alert('handleValidation');\n  }\n\n  // Handle a change in one of the form fields\n  handleChange(ev) {\n      // we stored the Output Component in our class\n      if (! this.state.outputComponent) {\n          alert(\"no outputComponent\");\n      }\n      else if (this.state.outputComponent && this.state.outputComponent.updateOutputMessage) {\n          // this.state.outputComponent.updateOutputMessage('form field element changed');\n      }\n  }\n\n  // Cancel button callback\n  cancelPressed(ev) {\n      // we stored the Output Component in our class\n      if (! this.state.outputComponent) {\n          alert(\"no outputComponent\");\n      }\n      if (this.state.outputComponent) {\n          alert(\"cancelPressed: outputComponent\");\n          //this.state.outputComponent.updateOutputMessage('cancel button pressed');\n      }\n  }\n\n  // Update button callback\n  updatePressed(ev) {\n      if (! this.state.outputComponent) {\n          alert(\"no outputComponent\");\n      }\n      else {\n          alert('updatePressed');\n      }\n  }\n\n  // Store the passed object - used for OutputMessageArea instance\n  storeOutputComponent(obj) {\n      if (! obj) {\n          alert(\"storeOutputComponent: no object passed\");\n      }\n      else {\n          this.state.outputComponent = obj\n          if (this.state.outputComponent == null) {\n              alert(\"storeOutputComponent: no outputComponent after assignment\");\n          }\n      }\n  }\n\n\n  // This defines the form contents\n  // NOTE: Can we pass a DOM class ID to the grommet class?\n  render() {\n    const obj = <OutputMessageArea desc={LABEL_MESSAGES} name={ID_MESSAGES} />;\n    this.storeOutputComponent(obj);\n    return (\n      <Form onSubmit={this.updatePressed} onReset={this.cancelPressed} onChange={this.handleChange} onValidate={this.handleValidation}>\n        <InputFormField desc={LABEL_COLO} name={ID_COLO} component={TrueFalse} />\n        <InputFormField desc={LABEL_USECASE} name={ID_USECASE} component={UseCase} />\n\n        <NumericRange desc={LABEL_CAPREQ} name={ID_CAPREQ} />\n        <NumericRange desc={LABEL_METACAP} name={ID_METACAP} />\n        <NumericRange desc={LABEL_DRIVECAP} name={ID_DRIVECAP} />\n        <NumericRange desc={LABEL_DRIVESPER} name={ID_DRIVESPER} />\n        <NumericRange desc={LABEL_SLOTSPER} name={ID_SLOTSPER} />\n        <NumericRange desc={LABEL_NVMEPER} name={ID_NVMEPER} />\n        <NumericRange desc={LABEL_DRIVETYPES} name={ID_DRIVETYPES} />\n        <NumericRange desc={LABEL_MAXFILLCAP} name={ID_MAXFILLCAP} />\n        <NumericRange desc={LABEL_NMVERATIO} name={ID_NMVERATIO} />\n        <NumericRange desc={LABEL_PROTTYPE} name={ID_PROTTYPE} />\n        <NumericRange desc={LABEL_ECDATA} name={ID_ECDATA} />\n        <NumericRange desc={LABEL_ECPARITY} name={ID_ECPARITY} />\n\n        {this.state.outputComponent}\n\n        <Box direction=\"row\" justify=\"between\" margin={{ top: \"medium\" }}>\n          <Button type=\"reset\" label=\"Cancel\" />\n          <Button type=\"submit\" label=\"Update\" primary />\n        </Box>\n      </Form>\n    );\n  }\n}    // end class FormComponent\n\nexport default FormComponent;\n\n"]},"metadata":{},"sourceType":"module"}