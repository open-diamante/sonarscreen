{"version":3,"sources":["FormComponent.js","App.js","reportWebVitals.js","index.js"],"names":["TrueFalse","React","useState","value","setValue","Select","options","onChange","option","USECASE_ARCHIVE","UseCase","props","USECASE_MIXED","OUTPUT_MARGINS","OUTPUTAREA_MARGINS","OutputMessage","Text","color","margin","desc","OutputMessageArea","handleChange","bind","state","nrDescription","nrName","name","ev","alert","msg","this","newmsg","Box","direction","pad","border","size","background","weight","truncate","updateOutputMessage","message","err","outputMess","updateOutputMessageArea","Component","NumericValue","nrProperties","event","setState","target","TextInput","icon","FormAdd","NumericRange","Grid","areas","start","end","columns","rows","gap","gridArea","RangeInput","TEXT_MARGINS","InputFormField","FormField","htmlFor","FormComponent","cancelPressed","updatePressed","outputComponent","obj","storeOutputComponent","Form","onSubmit","onReset","onValidate","handleValidation","component","justify","top","Button","type","label","primary","theme","global","font","family","height","AppBar","tag","align","left","right","vertical","elevation","style","zIndex","App","showSidebar","formComponent","val","setShowSidebar","fc","Grommet","themeMode","ResponsiveContext","Consumer","fill","Heading","level","HostMaintenance","Update","onClick","flex","overflow","horizontal","Layer","FormClose","Collapsible","open","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a73c9407.chunk.js","sourcesContent":["//\n// Author:       Brian Fromme\n// Copyright:    Copyright 2020, Gnu Public License - Version 2.0\n// Credits:      Brian Fromme, Bryan Gartner, Darren Soothill\n// Maintainer:   Brian Fromme\n// Status:       Prototype\n// Description:  Sonar form component - leveraged from grommet-sandbox\n//\n\nimport React from \"react\";\n//import ReactDOM from 'react-dom';\n\n// grommet\nimport {\n    Box,\n    Button,\n    Form,\n    FormField,\n    Grid,\n    RangeInput,\n    Select,\n    Text,\n    TextInput,\n} from 'grommet';\nimport { FormAdd } from 'grommet-icons';\n\n//\n// The form UI\n//\n\n// Simple True/False selector\nfunction TrueFalse() {\n    const [value, setValue] = React.useState('true');\n    return (\n      <Select\n          options={['true', 'false']}\n          value={value}\n          onChange={({ option }) => setValue(option)}\n        />\n    );\n}\n\n\n// UI data\nconst USECASE_ARCHIVE = 'Archive';\nconst USECASE_MIXED = 'Mixed';\n\n// Simple UseCase selector\nfunction UseCase(props) {\n    const [value, setValue] = React.useState({USECASE_ARCHIVE});\n    return (\n      <Select\n          options={[{USECASE_ARCHIVE}, {USECASE_MIXED}]}\n          value={USECASE_ARCHIVE}\n          onChange={({ option }) => setValue(option)}\n          {...props}\n        />\n    );\n}\n\n// NOTE: This hack manages placement of Text ouptut.  Change for various fonts, etc.\nconst OUTPUT_MARGINS = {\"vertical\":\"0px\", \"horizontal\":\"10px\", \"top\":\"0px\", \"bottom\":\"0px\", \"left\":\"10px\", \"right\":\"0px\"};\nconst OUTPUTAREA_MARGINS = {\"vertical\":\"0px\", \"horizontal\":\"0px\", \"top\":\"0px\", \"bottom\":\"0px\", \"left\":\"0px\", \"right\":\"10px\"};\n\n// OutputMessageArea - note there is only one of these\n////class OutputMessageArea extends React.Component {\n////    constructor(props) {\n////        super(props);\n////        this.nrDescription = props.desc;\n////        this.nrName = props.name;\n////        return this;\n////    }\n////    updateOutputMessage(msg) {\n////        return (\n////            <OutputMessage desc={msg} name={this.nrName} />\n////        );\n////    }\n////}\n\nfunction OutputMessage(props) {\n    // This is the Text area where output messages go\n    return (\n        <Text color=\"status-critical\" margin={OUTPUT_MARGINS} >\n           {props.desc}\n        </Text>\n    );\n}\n\n// the one and only output text area\nconst DEFAULT_OUTPUT_MESSAGE = \"nothing to discuss...\";\n// const ID_OUTPUT = \"output\";\n\n// OutputMessageArea - note there is only one of these\nclass OutputMessageArea extends React.Component {\n  constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.state = {\n          nrDescription: props.desc,\n          nrName: props.name,\n      }\n      return this;\n  }\n\n  // Handle a change in the OutputMessageArea\n  handleChange(ev) {\n      alert(\"handleChange: OutputMessageArea\");\n  }\n\n  updateOutputMessage(msg) {\n    var nam = this.state.nrName;\n    if (!nam) {\n        // raise an issue\n        alert('updateOutputMessage: no state name');\n    }\n    return (\n        <OutputMessage desc={msg} name={this.state.nrName} />\n    );\n  }\n\n  updateOutputMessageArea(msg) {\n    var newmsg = (msg ? msg : DEFAULT_OUTPUT_MESSAGE);\n    var desc = this.state.nrDescription;\n    if (!desc) {\n        // raise an issue\n        alert('updateOutputMessage: no state description');\n    }\n    return (\n        <Box direction=\"column\" pad=\"small\"> <Text> </Text>\n            <Box direction=\"row\" border={{ color: 'brand', size: 'small' }} background=\"light-3\" pad=\"small\">\n              <Text weight=\"bold\" truncate={true} margin={OUTPUTAREA_MARGINS} >\n                  {desc}\n              </Text>\n              {this.updateOutputMessage(newmsg)}\n            </Box>\n        </Box>\n    );\n  }\n\n  outputErrorOrWarning(message, err) {\n    // Display an error or warning message\n    alert('outputErrorOrWarning: ' + message);\n    var outputMess;\n    if (err) {\n        // preceed with: Error:\n        outputMess = 'Error: ' + message;\n    }\n    else {\n        // preceed with: Warning:\n        outputMess = 'Warning: ' + message;\n    }\n    // Update just the Text area\n    return this.updateOutputMessage(outputMess);\n  }\n\n  render() {\n    return (this.updateOutputMessageArea(''));\n  }\n}    // end of class OutputMessage\n\n\n// NOTE: Also need to change the value of the slide, when the user types here\nclass NumericValue extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {value: '#'};\n      // const [value, setValue] = React.useState('');\n      this.nrDescription = props.desc;\n      this.nrProperties = props;\n      this.onChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    alert('NumericValue changed: ' + this.state.value);\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    return (\n        <TextInput value={this.state} icon={FormAdd} />\n        // onChange={event => setValue(event.target.value)}\n    );\n  }\n}\n\n// NOTE: This hack manages placement of \"desc\" property passed to InputFormField.  Change for various fonts, etc.\n// {\"vertical\":\"20px\", \"horizontal\":\"0px\", \"top\":\"7px\", \"bottom\":\"0px\", \"left\":\"0px\", \"right\":\"10px\"}\n//\n\nclass NumericRange extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {value: 0};\n      this.nrDescription = props.desc;\n      this.nrProperties = props;\n      this.onChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    alert('NumericRange changed: ' + this.state.value);\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    // NOTE: Need to set an initial value for both RangeInput and NumericValue\n      // Perhaps that means they should be a single component\n    return (\n      <Grid\n          areas={[\n              { name: 'labl', start: [0, 0], end: [0, 0] },\n              { name: 'slid', start: [1, 0], end: [1, 0] },\n              { name: 'numb', start: [2, 0], end: [2, 0] },\n          ]}\n          columns={['280px', 'medium', '60px']}\n          rows={['50px']}\n          gap='small'\n        >\n        <Box gridArea='labl' background='brand'>\n          <Text margin={{\"vertical\":\"10px\", \"horizontal\":\"0px\", \"top\":\"4px\", \"bottom\":\"6px\", \"left\":\"5px\", \"right\":\"10px\"}}>\n              {this.nrDescription}\n          </Text>\n        </Box>\n        <Box gridArea='slid' background='none'>\n          <RangeInput {...this.nrProperties} />\n        </Box>\n        <Box gridArea='numb' background='none'>\n          <NumericValue  />\n        </Box>\n      </Grid>\n    );\n  }\n}\n\n\n// NOTE: This hack manages placement of \"desc\" property passed to InputFormField.  Change for various fonts, etc.\nconst TEXT_MARGINS = {\"vertical\":\"20px\", \"horizontal\":\"0px\", \"top\":\"7px\", \"bottom\":\"0px\", \"left\":\"0px\", \"right\":\"10px\"};\n\n// Specific FormField definition\n// NOTE:  Make consistent with:  function(props) or class\n//\n// The component to insert in the FormField. Grommet will add update the form values when this field changes.\n// Any additional properties (such as initial value) you pass to FormField will be forwarded to this component.\n// The component may be custom as long it supports the properties of name, value, onChange (event => {}),\n// while event has either event.value or event.target.value.\n\nclass InputFormField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.desc = this.props.desc;\n    this.name = this.props.name;\n  }\n\n  validate() {\n      // TBD\n      // function\"\n      // {\n      // regexp:\n      // \"new RegExp(...),\"\n      // message:\n      // \"string\"\n      // \"node,\"\n      // status:\n      // \"error\"\n      // \"info\"\n      // }\n  }\n\n  render() {\n    // NOTE: don't use the Label feature of the FormField until we can figure out how to position it correctly\n    return (\n          <Box direction=\"row\">\n            <Text margin={TEXT_MARGINS}> {this.props.desc} </Text>\n            <FormField name={this.name} htmlFor={this.name} direction='row-responsive' {...this.props} />\n          </Box>\n    );\n  }\n}\n\n// UI object IDs\nconst ID_COLO = \"colo\";\nconst ID_USECASE = \"usecase\";\nconst ID_CAPREQ = \"capreq\";\nconst ID_METACAP = \"metacap\";\nconst ID_DRIVECAP = \"drivecap\";\nconst ID_DRIVESPER = \"drivesper\";\nconst ID_SLOTSPER = \"slotsper\";\nconst ID_NVMEPER = \"nvmeper\";\nconst ID_DRIVETYPES = \"drivetypes\";\nconst ID_MAXFILLCAP = \"maxfillcap\";\nconst ID_NMVERATIO = \"nvmeratio\";\nconst ID_PROTTYPE = \"prottype\";\nconst ID_ECDATA = \"ecdata\";\nconst ID_ECPARITY = \"ecparity\";\nconst ID_MESSAGES = \"outputarea\";\n// const CLASS_MESSAGES = \"outputMessageArea\";\n\n// Labels\nconst LABEL_COLO = \"Co-Location (GW/MDS/MON): \";\nconst LABEL_USECASE = \"Use Case: \";\nconst LABEL_CAPREQ = \"Capacity Required (TB): \";\nconst LABEL_METACAP = \"Metadata Capacity (TB): \";\nconst LABEL_DRIVECAP = \"Drive Capacity (TB): \";\nconst LABEL_DRIVESPER = \"# of Drives / Chassis: \";\nconst LABEL_SLOTSPER = \"# of Populated Slots / Chassis: \";\nconst LABEL_NVMEPER = \"# of NVMe Slots / Chassis: \";\nconst LABEL_DRIVETYPES = \"Drive Types: \";\nconst LABEL_MAXFILLCAP = \"Maximum Fill Capacity %: \";\nconst LABEL_NMVERATIO = \"NVMe Ratio (1:n): \";\nconst LABEL_PROTTYPE = \"Protection Type: \";\nconst LABEL_ECDATA = \"Error Correction - Data: \";\nconst LABEL_ECPARITY = \"Error Correction - Parity: \";\nconst LABEL_MESSAGES = \"Messages: \";\n\n\nclass FormComponent extends React.Component {\n  constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.cancelPressed = this.cancelPressed.bind(this);\n      this.updatePressed = this.updatePressed.bind(this);\n      this.state = {\n          outputComponent: null\n      };\n      return this;\n  };\n\n  // Handle a change in one of the form fields\n  handleValidation(ev) {\n      alert('handleValidation');\n  }\n\n  // Handle a change in one of the form fields\n  handleChange(ev) {\n      // we stored the Output Component in our class\n      if (! this.state.outputComponent) {\n          alert(\"no outputComponent\");\n      }\n      else if (this.state.outputComponent && this.state.outputComponent.updateOutputMessage) {\n          // this.state.outputComponent.updateOutputMessage('form field element changed');\n      }\n  }\n\n  // Cancel button callback\n  cancelPressed(ev) {\n      // we stored the Output Component in our class\n      if (! this.state.outputComponent) {\n          alert(\"no outputComponent\");\n      }\n      if (this.state.outputComponent) {\n          alert(\"cancelPressed: outputComponent\");\n          //this.state.outputComponent.updateOutputMessage('cancel button pressed');\n      }\n  }\n\n  // Update button callback\n  updatePressed(ev) {\n      if (! this.state.outputComponent) {\n          alert(\"no outputComponent\");\n      }\n      else {\n          alert('updatePressed');\n      }\n  }\n\n  // Store the passed object - used for OutputMessageArea instance\n  storeOutputComponent(obj) {\n      if (! obj) {\n          alert(\"storeOutputComponent: no object passed\");\n      }\n      else {\n          this.state.outputComponent = obj\n          if (this.state.outputComponent == null) {\n              alert(\"storeOutputComponent: no outputComponent after assignment\");\n          }\n      }\n  }\n\n\n  // This defines the form contents\n  // NOTE: Can we pass a DOM class ID to the grommet class?\n  render() {\n    const obj = <OutputMessageArea desc={LABEL_MESSAGES} name={ID_MESSAGES} />;\n    this.storeOutputComponent(obj);\n    return (\n      <Form onSubmit={this.updatePressed} onReset={this.cancelPressed} onChange={this.handleChange} onValidate={this.handleValidation}>\n        <InputFormField desc={LABEL_COLO} name={ID_COLO} component={TrueFalse} />\n        <InputFormField desc={LABEL_USECASE} name={ID_USECASE} component={UseCase} />\n\n        <NumericRange desc={LABEL_CAPREQ} name={ID_CAPREQ} />\n        <NumericRange desc={LABEL_METACAP} name={ID_METACAP} />\n        <NumericRange desc={LABEL_DRIVECAP} name={ID_DRIVECAP} />\n        <NumericRange desc={LABEL_DRIVESPER} name={ID_DRIVESPER} />\n        <NumericRange desc={LABEL_SLOTSPER} name={ID_SLOTSPER} />\n        <NumericRange desc={LABEL_NVMEPER} name={ID_NVMEPER} />\n        <NumericRange desc={LABEL_DRIVETYPES} name={ID_DRIVETYPES} />\n        <NumericRange desc={LABEL_MAXFILLCAP} name={ID_MAXFILLCAP} />\n        <NumericRange desc={LABEL_NMVERATIO} name={ID_NMVERATIO} />\n        <NumericRange desc={LABEL_PROTTYPE} name={ID_PROTTYPE} />\n        <NumericRange desc={LABEL_ECDATA} name={ID_ECDATA} />\n        <NumericRange desc={LABEL_ECPARITY} name={ID_ECPARITY} />\n\n        {this.state.outputComponent}\n\n        <Box direction=\"row\" justify=\"between\" margin={{ top: \"medium\" }}>\n          <Button type=\"reset\" label=\"Cancel\" />\n          <Button type=\"submit\" label=\"Update\" primary />\n        </Box>\n      </Form>\n    );\n  }\n}    // end class FormComponent\n\nexport default FormComponent;\n\n","//\n// Author:       Brian Fromme\n// Copyright:    Copyright 2020, Gnu Public License - Version 2.0\n// Credits:      Brian Fromme, Bryan Gartner, Darren Soothill\n// Maintainer:   Brian Fromme\n// Status:       Prototype\n// Description:  Sonar main module\n//\n\nimport React from \"react\";\nimport { FormClose, HostMaintenance, Update } from 'grommet-icons';\nimport {\n    Box,\n    Button,\n    Collapsible,\n    Grommet,\n    Heading,\n    Layer,\n    ResponsiveContext,\n} from 'grommet';\n\nimport FormComponent from './FormComponent';\n\n//\n// Definitions\n// \nconst theme = {\n    global: {\n        font: {\n            family: 'Roboto',\n            size: '12px',\n            height: '14px',\n        },\n    },\n};\n\n//\n// The User Interface\n//\n\nconst AppName = \"Sonar Sizing Tool\";\n\nconst AppBar = (props) => (\n    <Box\n        tag='header'\n        direction='row'\n        align='center'\n        justify='between'\n        background='brand'\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n        elevation='medium'\n        style={{ zIndex: '1' }}\n        {...props}\n    />\n);\n\n\n// App - note there is only one of these instances\nclass App extends React.Component {\n    // \n    constructor(props) {\n        super(props);\n        this.state = {\n            showSidebar: false,\n            formComponent: null\n        }\n        return this;\n    };\n\n    setShowSidebar(val) {\n        // thus begins the attempt to track the visual state\n        // but, the value \"showSidebar\" must also be a trigger for the UI behavior\n        this.setState({setShowSidebar: {val}});\n    }\n\n    render() {\n        var fc = <FormComponent />;\n        this.state.formComponent = fc;\n        return (\n          <Grommet theme={theme} themeMode=\"dark\">\n          <ResponsiveContext.Consumer>\n            {size => (\n            <Box fill>\n              <AppBar>\n                <Heading level='3' margin='none'>{AppName}</Heading>\n                <HostMaintenance />\n                <Button icon={<Update />} onClick={() => this.setShowSidebar(!this.state.showSidebar)} />\n              </AppBar>\n              <Box direction='row' flex overflow={{ horizontal: 'hidden' }}>\n                <Box flex align='left' justify='left' direction=\"column\" border={{color:'brand', size:'small'}} pad=\"medium\">\n                {this.state.formComponent}\n                </Box>\n                {(!this.state.showSidebar || size !== 'small') ? (\n                  <Collapsible direction=\"horizontal\" open={this.state.showSidebar}>\n                    <Box flex width='large' background='light-2' elevation='small' align='center' justify='center' >\n                      sizing results\n                    </Box>\n                  </Collapsible>\n                ): (\n                  <Layer>\n                    <Box background='light-2' tag='header' justify='end' align='center' direction='row' >\n                      <Button icon={<FormClose />} onClick={() => this.setShowSidebar(false)} />\n                    </Box>\n                    <Box fill background='light-2' align='center' justify='center' >\n                      foobar\n                    </Box>\n                  </Layer>\n                )}\n              </Box>\n            </Box>\n            )}\n          </ResponsiveContext.Consumer>\n          </Grommet>\n        );\n    }   // end render()\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//\n// Author:       Brian Fromme\n// Copyright:    Copyright 2020, Gnu Public License - Version 2.0\n// Credits:      Brian Fromme, Bryan Gartner, Darren Soothill\n// Maintainer:   Brian Fromme\n// Status:       Prototype\n// Description:  Sonar first page loaded module\n//\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// const element = document.getElementById('content');\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// NOTE: explain\n//document.body.classList.remove('loading');\n\nreportWebVitals();\n\n"],"sourceRoot":""}